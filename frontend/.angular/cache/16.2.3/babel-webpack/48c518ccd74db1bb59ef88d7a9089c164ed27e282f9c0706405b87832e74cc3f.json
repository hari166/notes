{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class ApiService {}\n_class = ApiService;\n_class.ɵfac = function ApiService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ApiService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\aksha\\Desktop\\School\\Sem7\\Net Centric Programming\\Project\\Angular\\notes\\frontend\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable, signal } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Workspaces } from '../Data';\nimport { Types } from 'mongoose';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  // workspaces = signal<Workspaces>({});\n\n  // constructor(private http: HttpClient) { }\n\n  // getWorkspace(){\n  //   this.http.get<any>('http://localhost:3000/api/getWorkspaces').subscribe(data=>{\n  //     this.workspaces.set(data)\n  //   })\n  // }\n\n  // addWorkspace(){\n  //   this.http.put<any>('http://localhost:3000/api/addWorkspace',{\n  //     name: 'New Space',\n  //   }).subscribe(data=>{\n  //     window.location.reload();\n  //   })\n  // }\n\n  // updateName(workspaceId: string){\n  //   this.http.put<any>('http://localhost:3000/api/updateWorkspaceName',{\n  //     workspaceId: workspaceId,\n  //     name: this.workspaces()[workspaceId].name,\n  //   }).subscribe(data=>{\n  //     window.location.reload();\n  //   })\n  // }\n\n  // deleteWorkspace(workspaceId: string){\n  //   this.http.put<any>('http://localhost:3000/api/deleteWorkspace',{\n  //     workspaceId: workspaceId,\n  //   }).subscribe(data=>{\n  //     window.location.reload();\n  //   })\n  // }\n\n  // addNote(id: string){\n  //   this.http.put<any>('http://localhost:3000/api/addNote',{\n  //     workspaceId: id,\n  //   }).subscribe(data=>{\n  //     this.getWorkspace()\n  //   })\n  // }\n\n  // updateTitle(workspaceId: string, noteId: string, title: string){\n  //   this.http.put<any>('http://localhost:3000/api/updateNoteTitle',{\n  //     workspaceId: workspaceId,\n  //     noteId: noteId,\n  //     title: title,\n  //   }).subscribe(data=>{\n  //     this.getWorkspace()\n  //   })\n  // }\n\n  // updateContent(workspaceId: string, noteId: Types.ObjectId, content: string){\n  //   this.http.put<any>('http://localhost:3000/api/updateNoteContent',{\n  //     workspaceId: workspaceId,\n  //     noteId: noteId,\n  //     content: content,\n  //   }).subscribe(data=>{\n  //     this.getWorkspace()\n  //   })\n  // }\n\n  // deleteNote(workspaceId: string, noteId: Types.ObjectId){\n  //   this.http.put<any>('http://localhost:3000/api/deleteNote',{\n  //     workspaceId: workspaceId,\n  //     noteId: noteId,\n  //   }).subscribe(data=>{\n  //     window.location.reload();\n  //   })\n  // }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,UAAU;SAAVA,UAAU;;mBAAVA,MAAU;AAAA;;SAAVA,MAAU;EAAAC,OAAA,EAAVD,MAAU,CAAAE,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}