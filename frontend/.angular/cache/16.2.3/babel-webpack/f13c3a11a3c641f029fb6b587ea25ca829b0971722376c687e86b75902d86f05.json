{"ast":null,"code":"var _class;\nimport { signal } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ApiService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.wSLoaded = signal(false);\n    this.curWsId = signal('');\n    this.defaultWsId = signal('');\n    this.workspaces = signal({});\n    this.userId = signal('');\n  }\n  getWorkspace() {\n    this.http.post('http://localhost:3000/api/getWorkspaces', {\n      userId: this.userId()\n    }).subscribe(data => {\n      this.workspaces.set(data);\n      this.wSLoaded.set(true);\n      this.defaultWsId.set(Object.keys(data)[0]);\n      this.router.navigate(['workspace']);\n      console.log('work');\n    });\n  }\n  addWorkspace() {\n    this.http.put('http://localhost:3000/api/addWorkspace', {\n      name: 'New Space'\n    }).subscribe(data => {\n      this.getWorkspace();\n    });\n  }\n  updateWorkspaceName() {\n    this.http.put('http://localhost:3000/api/updateWorkspaceName', {\n      workspaceId: this.curWsId(),\n      name: this.workspaces()[this.curWsId()].name\n    }).subscribe(data => {\n      this.getWorkspace();\n    });\n  }\n  deleteWorkspace() {\n    this.http.put('http://localhost:3000/api/deleteWorkspace', {\n      workspaceId: this.curWsId()\n    }).subscribe(data => {\n      this.getWorkspace();\n    });\n  }\n  addNote() {\n    this.http.put('http://localhost:3000/api/addNote', {\n      workspaceId: this.curWsId()\n    }).subscribe(data => {\n      this.getWorkspace();\n    });\n  }\n  updateTitle(noteId, title) {\n    this.http.put('http://localhost:3000/api/updateNoteTitle', {\n      workspaceId: this.curWsId(),\n      noteId: noteId,\n      title: title\n    }).subscribe(data => {\n      // this.getWorkspace()\n    });\n  }\n  updateContent(noteId, content) {\n    this.http.put('http://localhost:3000/api/updateNoteContent', {\n      workspaceId: this.curWsId(),\n      noteId: noteId,\n      content: content\n    }).subscribe(data => {\n      // this.getWorkspace()\n    });\n  }\n  deleteNote(noteId) {\n    this.http.put('http://localhost:3000/api/deleteNote', {\n      workspaceId: this.curWsId(),\n      noteId: noteId\n    }).subscribe(data => {\n      this.getWorkspace();\n    });\n  }\n}\n_class = ApiService;\n_class.ɵfac = function ApiService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["signal","ApiService","constructor","http","router","wSLoaded","curWsId","defaultWsId","workspaces","userId","getWorkspace","post","subscribe","data","set","Object","keys","navigate","console","log","addWorkspace","put","name","updateWorkspaceName","workspaceId","deleteWorkspace","addNote","updateTitle","noteId","title","updateContent","content","deleteNote","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\aksha\\Desktop\\School\\Sem7\\Net Centric Programming\\Project\\Angular\\notes\\frontend\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable, signal } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Workspaces } from '../Data';\nimport { Types } from 'mongoose';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  wSLoaded = signal<boolean>(false);\n  curWsId = signal<string>('');\n  defaultWsId = signal<string>('');\n  workspaces = signal<Workspaces>({});\n  userId = signal<string>('');\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getWorkspace(){\n    this.http.post<any>('http://localhost:3000/api/getWorkspaces',{\n      userId: this.userId(),\n    }).subscribe(data=>{\n      this.workspaces.set(data)\n      this.wSLoaded.set(true)\n      this.defaultWsId.set(Object.keys(data)[0])\n      this.router.navigate(['workspace'])\n      console.log('work')\n    })\n  }\n\n  addWorkspace(){\n    this.http.put<any>('http://localhost:3000/api/addWorkspace',{\n      name: 'New Space',\n    }).subscribe(data=>{\n      this.getWorkspace()\n    })\n  }\n\n  updateWorkspaceName(){\n    this.http.put<any>('http://localhost:3000/api/updateWorkspaceName',{\n      workspaceId: this.curWsId(),\n      name: this.workspaces()[this.curWsId()].name,\n    }).subscribe(data=>{\n      this.getWorkspace()\n    })\n  }\n\n  deleteWorkspace(){\n    this.http.put<any>('http://localhost:3000/api/deleteWorkspace',{\n      workspaceId: this.curWsId(),\n    }).subscribe(data=>{\n      this.getWorkspace()\n    })\n  }\n\n  addNote(){\n    this.http.put<any>('http://localhost:3000/api/addNote',{\n      workspaceId: this.curWsId(),\n    }).subscribe(data=>{\n      this.getWorkspace()\n    })\n  }\n\n  updateTitle(noteId: Types.ObjectId, title: string){\n    this.http.put<any>('http://localhost:3000/api/updateNoteTitle',{\n      workspaceId: this.curWsId(),\n      noteId: noteId,\n      title: title,\n    }).subscribe(data=>{\n      // this.getWorkspace()\n    })\n  }\n\n  updateContent(noteId: Types.ObjectId, content: string){\n    this.http.put<any>('http://localhost:3000/api/updateNoteContent',{\n      workspaceId: this.curWsId(),\n      noteId: noteId,\n      content: content,\n    }).subscribe(data=>{\n      // this.getWorkspace()\n    })\n  }\n\n  deleteNote(noteId: Types.ObjectId){\n    this.http.put<any>('http://localhost:3000/api/deleteNote',{\n      workspaceId: this.curWsId(),\n      noteId: noteId,\n    }).subscribe(data=>{\n      this.getWorkspace()\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}